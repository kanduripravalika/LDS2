class Node:
    def __init__(self, value):
        self.value = value
        self.next = None
def delete_zero_sum_sublists(head):
    dummy = Node(0)
    dummy.next = head
    current = dummy
    prefix_sum = 0
    prefix_sum_map = {}
    while current:
        prefix_sum += current.value
        if prefix_sum in prefix_sum_map:
            prev = prefix_sum_map[prefix_sum].next
            prev_sum = prefix_sum + prev.value
            while prev != current:
                prefix_sum_map.pop(prev_sum)
                prev = prev.next
                prev_sum += prev.value
            prefix_sum_map[prefix_sum].next = current.next
        else:
            prefix_sum_map[prefix_sum] = current
        current = current.next
    return dummy.next
def print_linked_list(head):
    current = head
    while current:
        print(current.value, end=" ")
        current = current.next
    print()
head = Node(5)
node1 = Node(2)
node2 = Node(0)
node3 = Node(2)
node4 = Node(-1)
node5 = Node(1)
node6 = Node(-4)
node7 = Node(4)

head.next = node1
node1.next = node2
node2.next = node3
node3.next = node4
node4.next = node5
node5.next = node6
node6.next = node7

print("Original linked list:")
print_linked_list(head)

head = delete_zero_sum_sublists(head)

print("Modified linked list:")
print_linked_list(head)

EXCEPTED OUTPUT:

Original linked list:
5 2 0 2 -1 1 -4 4 
Modified linked list:
5 4 
